// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  provider = "postgresql"
  // Uses connection pooling
  url = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}
 
model Family {
  id          Int       @id @default(autoincrement())
  last_name   String
  address     Address?
  adults      Adult[]
  children    Child[]
}

model Enneagram {
  id          Int       @id @default(autoincrement())
  type        String
  name        String
  url         String
  adults      Adult[]
}

model Adult {
  id          Int         @id @default(autoincrement())
  first_name  String
  email       String
  phone       String
  birth_date  DateTime
  familyId    Int
  family      Family      @relation(fields: [familyId], references: [id])
  enneagramId Int
  enneagram   Enneagram   @relation(fields: [enneagramId], references: [id])
}

model Child {
  id          Int     @id @default(autoincrement())
  first_name  String
  birth_date  DateTime
  familyId    Int
  family      Family  @relation(fields: [familyId], references: [id])
}

model Address {
  id          Int     @id @default(autoincrement())
  street      String
  city        String
  state       String
  zip         String
  familyId    Int     @unique
  family      Family  @relation(fields: [familyId], references: [id])
}

model Semester {
  id                  Int     @id @default(autoincrement())
  semester_name       String
  semester_year       String
  events              Event[]
}

model Group {
  id                  Int     @id @default(autoincrement()) 
  group_type          String
  events              Event[]
}

model Event {
  id          Int       @id @default(autoincrement())
  name        String
  year        String
  date        DateTime
  location    String
  semesterId  Int
  semester    Semester  @relation(fields: [semesterId], references: [id])
  groupId     Int       @unique
  group       Group     @relation(fields: [groupId], references: [id])
  }

//TODO add a model for year